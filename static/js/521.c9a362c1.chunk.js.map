{"version":3,"file":"static/js/521.c9a362c1.chunk.js","mappings":"sPAoDA,EA/Ca,WACT,IACQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAG,6CAAyCF,EAAzC,4BAFG,oCAIZ,GAA8BG,EAAAA,EAAAA,YAA9B,eAAQC,EAAR,KAAgBC,EAAhB,KAWA,IATAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,sGACOC,MAAMN,GADb,cACVO,EADU,gBAEYA,EAASC,OAFrB,OAEVC,EAFU,OAGhBN,EAAUM,GAHM,2CAAH,qDAKjBJ,GACH,GAAE,CAACL,KAECE,EACD,OAAO,wCAGX,IAAQQ,EAASR,EAATQ,KAER,OACI,gBAAKC,UAAU,gBAAf,UACI,eAAIA,UAAU,sBAAd,SACKD,EAAKE,KAAI,SAACC,GAAD,OACN,2BACI,gBAAKF,UAAU,eAAeG,IAAG,yCAAoCD,EAAGE,cAAgBC,IAAKH,EAAGI,QAChG,iBAAKN,UAAU,2BAAf,WACI,uBAAIE,EAAGI,QACP,0BAAOJ,EAAGK,iBAJTL,EAAGf,GADN,OAYzB,C,sBC1CD,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport \"./Cast.css\"\n\nconst Cast = () => {\n    const KEY = \"6cd416a210a971fc6ba2d58e4253069e\"\n    const { id } = useParams()\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`\n\n    const [ movies, setMovies ] = useState()\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            const response = await fetch(URL)\n            const fetchedMovies = await response.json()\n            setMovies(fetchedMovies)\n        }\n        fetchMovies();\n    }, [URL])\n\n    if (!movies) {\n        return <div>Loading...</div>;\n    }\n\n    const { cast } = movies\n\n    return(\n        <div className=\"cast__section\">\n            <ul className=\"cast__unlisted-list\">\n                {cast.map((el) => (\n                    <li key={el.id}>\n                        <img className=\"cast__poster\" src={`https://image.tmdb.org/t/p/w500${el.profile_path}`} alt={el.name} />\n                        <div className=\"cast__actor-data-section\">\n                            <p>{el.name}</p>\n                            <span>{el.character}</span>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nCast.propTypes = {\n    KEY: PropTypes.string,\n    URL: PropTypes.string,\n    id: PropTypes.number,\n    fetchMovies: PropTypes.func,\n    cast: PropTypes.array\n}\n\nexport default Cast","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","URL","useState","movies","setMovies","useEffect","fetchMovies","fetch","response","json","fetchedMovies","cast","className","map","el","src","profile_path","alt","name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}