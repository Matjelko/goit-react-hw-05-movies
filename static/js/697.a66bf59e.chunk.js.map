{"version":3,"file":"static/js/697.a66bf59e.chunk.js","mappings":"sPA0CA,EArCiB,WACb,IACMA,EAAG,kEADG,oCAGZ,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,sGACOC,MAAMN,GADb,cACVO,EADU,gBAEYA,EAASC,OAFrB,OAEVC,EAFU,OAGhBN,EAAUM,EAAcC,SAHR,2CAAH,qDAKjBL,GACH,GAAE,CAACL,KAGA,4BACI,eAAIW,UAAU,mBAAd,6BACA,wBACKT,EAAOU,KAAI,SAAAC,GAAK,OACb,SAACC,EAAA,EAAD,CAEIC,GAAIF,EAAME,GACVC,MAAOH,EAAMG,OAFRH,EAAME,GAFF,QAUhC,C,+FC7BKE,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6DAkBnB,EAbkB,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrB,OACI,eAAID,GAAIA,EAAR,UACI,SAACE,EAAD,CAAeG,GAAE,kBAAaL,GAA9B,SAAqCC,KAGhD,C,sBChBD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/HomePage/MainPage.jsx","components/MovieItem/MovieItem.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport MovieItem from \"../MovieItem/MovieItem\"\nimport PropTypes from 'prop-types';\nimport \"./MainPage.css\"\n\nconst MainPage = () => {\n    const KEY = \"6cd416a210a971fc6ba2d58e4253069e\"\n    const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`\n\n    const [ movies, setMovies ] = useState([])\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            const response = await fetch(URL)\n            const fetchedMovies = await response.json()\n            setMovies(fetchedMovies.results)\n        }\n        fetchMovies();\n    }, [URL])\n    \n    return(\n        <div>\n            <h2 className=\"mainPage__header\">Trending today</h2>\n            <ul>\n                {movies.map(movie => (\n                    <MovieItem\n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.title}\n                    />\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nMainPage.propTypes = {\n    KEY: PropTypes.string,\n    URL: PropTypes.string,\n    fetchMovies: PropTypes.func,\n}\n\nexport default MainPage","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\"\nimport PropTypes from 'prop-types';\nimport \"./MovieItem.css\"\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  font-size: 20px;\n`\n\nconst MovieItem = ({ id, title }) => {\n    return(\n        <li id={id}>\n            <StyledNavLink to={`/movies/${id}`}>{title}</StyledNavLink>\n        </li>\n    )\n}\n\nMovieItem.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string\n}\n\nexport default MovieItem","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["URL","useState","movies","setMovies","useEffect","fetchMovies","fetch","response","json","fetchedMovies","results","className","map","movie","MovieItem","id","title","StyledNavLink","styled","NavLink","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}