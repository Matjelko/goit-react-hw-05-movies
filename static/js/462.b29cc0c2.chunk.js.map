{"version":3,"file":"static/js/462.b29cc0c2.chunk.js","mappings":"+KAIMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6DAkBnB,IAbkB,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrB,OACI,eAAID,GAAIA,EAAR,UACI,SAACH,EAAD,CAAeK,GAAE,kBAAaF,GAA9B,SAAqCC,KAGhD,C,oHCOD,EAnBkB,SAAC,GAAuB,IAApBE,EAAmB,EAAnBA,aAClB,OACI,kBAAMC,SAAUD,EAAhB,WACI,kBACIE,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,oBAEhB,mBAAQJ,UAAU,oBAAoBC,KAAK,SAA3C,sBAGX,E,kBCkCD,EA7CkB,WACd,IAEA,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KAEMT,EAAY,mCAAG,WAAMU,GAAN,2EACjBA,EAAMC,iBAEAC,EAAQF,EAAMG,OAAO,GAAGC,MAExBC,EALW,4DAJT,mCAIS,kBAK6DH,GAExEI,EAPW,mCAOG,sGACOC,MAAMF,GADb,cACVG,EADU,gBAEYA,EAASC,OAFrB,OAEVC,EAFU,OAGhBX,EAAUW,EAAcC,SAHR,2CAPH,qDAYjBL,IAZiB,2CAAH,sDAelB,OACI,iBAAKM,MAAO,CACRC,UAAW,IADf,WAGI,SAAC,EAAD,CAAWvB,aAAcA,KACzB,wBACKQ,EAAOgB,KAAI,SAAAC,GAAK,OACb,SAACC,EAAA,EAAD,CAEI7B,GAAI4B,EAAM5B,GACVC,MAAO2B,EAAM3B,OAFR2B,EAAM5B,GAFF,QAUhC,C,sBCzCD,SAAS8B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBpB,EAAQqB,EAAKrB,KAInB,CAHE,MAAOsB,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQf,GAERwB,QAAQT,QAAQf,GAAOyB,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMjB,GACba,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQlB,EAClE,CAEA,SAASkB,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MovieItem/MovieItem.jsx","components/Searchbar/Searchbar.jsx","pages/MoviePage/MoviePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\"\nimport PropTypes from 'prop-types';\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  font-size: 20px;\n`\n\nconst MovieItem = ({ id, title }) => {\n    return(\n        <li id={id}>\n            <StyledNavLink to={`/movies/${id}`}>{title}</StyledNavLink>\n        </li>\n    )\n}\n\nMovieItem.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string\n}\n\nexport default MovieItem","import PropTypes from \"prop-types\"\nimport \"./Searchbar.css\"\n\nconst Searchbar = ({  handleSubmit }) => {\n    return(\n        <form onSubmit={handleSubmit}>\n            <input\n                className=\"searchbar__input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search Film...\"\n            />\n            <button className=\"searchbar__button\" type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nSearchbar.propTypes = {\n    handleSubmit: PropTypes.func\n}\n\nexport default Searchbar","import Searchbar from \"../../components/Searchbar/Searchbar\"\nimport MovieItem from \"../../components/MovieItem/MovieItem\"\nimport { useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst MoviePage = () => {\n    const KEY = \"6cd416a210a971fc6ba2d58e4253069e\"\n    \n    const [ movies, setMovies ] = useState([])\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n\n        const input = event.target[0].value;\n        // console.log(event)\n        const URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${input}`\n  \n        const fetchMovies = async () => {\n            const response = await fetch(URL)\n            const fetchedMovies = await response.json()\n            setMovies(fetchedMovies.results)\n        }\n        fetchMovies()\n    }\n\n    return(\n        <div style={{\n            marginTop: 40\n        }}>\n            <Searchbar handleSubmit={handleSubmit}/>\n            <ul>\n                {movies.map(movie => (\n                    <MovieItem\n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.title}\n                    />\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nMoviePage.propTypes = {\n    KEY: PropTypes.string,\n    URL: PropTypes.string,\n    handleSubmit: PropTypes.func,\n    fetchMovies: PropTypes.func\n}\n\nexport default MoviePage","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["StyledNavLink","styled","NavLink","id","title","to","handleSubmit","onSubmit","className","type","autoComplete","autoFocus","placeholder","useState","movies","setMovies","event","preventDefault","input","target","value","URL","fetchMovies","fetch","response","json","fetchedMovies","results","style","marginTop","map","movie","MovieItem","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}